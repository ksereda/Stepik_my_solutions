package module_3_5.task_1;

/*
–†–µ–∞–ª–∏–∑—É–π—Ç–µ –º–µ—Ç–æ–¥, –≤—ã–ø–æ–ª–Ω—è—é—â–∏–π —á–∏—Å–ª–µ–Ω–Ω–æ–µ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞ –∑–∞–¥–∞–Ω–Ω–æ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–µ –ø–æ —Ñ–æ—Ä–º—É–ª–µ –ª–µ–≤—ã—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤.

–§—É–Ω–∫—Ü–∏—è –∑–∞–¥–∞–Ω–∞ –æ–±—ä–µ–∫—Ç–æ–º, —Ä–µ–∞–ª–∏–∑—É—é—â–∏–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å java.util.function.DoubleUnaryOperator. –ï–≥–æ –º–µ—Ç–æ–¥ applyAsDouble() –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞
–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –∑–∞–¥–∞–Ω–Ω–æ–π —Ç–æ—á–∫–µ.

–ò–Ω—Ç–µ—Ä–≤–∞–ª –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–¥–∞–µ—Ç—Å—è –µ–≥–æ –∫–æ–Ω–µ—á–Ω—ã–º–∏ —Ç–æ—á–∫–∞–º–∏ ùëé –∏ ùëè, –ø—Ä–∏—á–µ–º ùëé<=ùëè. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ—á–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —à–∞–≥ —Å–µ—Ç–∫–∏ –Ω–µ –±–æ–ª—å—à–µ 10‚àí6.

–ü—Ä–∏–º–µ—Ä. –í—ã–∑–æ–≤

integrate(x -> 1, 0, 10)
–¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ 10.

P.S. –ï—Å–ª–∏ –∑–∞–¥–∞—á–∞ —Å–ª–∏—à–∫–æ–º –ª–µ–≥–∫–∞—è, —Ç–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –º–æ–∂–µ—Ç–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä —à–∞–≥–∞ —Å–µ—Ç–∫–∏ –ø–æ —Å–ª–µ–¥—É—é—â–µ–º—É –∞–ª–≥–æ—Ä–∏—Ç–º—É:

–í—ã—á–∏—Å–ª–∏—Ç—å –ø—Ä–∏–±–ª–∏–∂–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞–ª–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏ –Ω–∞—á–∞–ª—å–Ω–æ–º –∑–Ω–∞—á–µ–Ω–∏–∏ —à–∞–≥–∞ —Å–µ—Ç–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 1).
–í—ã—á–∏—Å–ª–∏—Ç—å –ø—Ä–∏–±–ª–∏–∂–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞–ª–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏ –±–æ–ª–µ–µ –º–µ–ª–∫–æ–º —à–∞–≥–µ —Å–µ—Ç–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —É–º–µ–Ω—å—à–∏—Ç—å —à–∞–≥ —Å–µ—Ç–∫–∏ –≤ –¥–≤–∞ —Ä–∞–∑–∞).
–ï—Å–ª–∏ —Ä–∞–∑–Ω–æ—Å—Ç—å –¥–≤—É—Ö –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–π –∏–Ω—Ç–µ–≥—Ä–∞–ª–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–∞–ª–∞, —Ç–æ –∑–∞–≤–µ—Ä—à–∞–µ–º –∞–ª–≥–æ—Ä–∏—Ç–º –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ–∫—É—â–µ–µ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–µ –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.
–ò–Ω–∞—á–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —à–∞–≥—É 2.
*/

import java.util.function.DoubleUnaryOperator;

public class Main {

    public static double integrate(DoubleUnaryOperator f, double a, double b) {

        double nextStep = 1e-6;
        double height = 0;

        for (double x = a; x < b; x += nextStep) {
            height += f.applyAsDouble(x);
        }

        double result = height * nextStep;

        return result;
    }


}
